Hospital Database

Description: https://www.w3resource.com/sql-exercises/hospital-database-exercise/index.php

Exercise: https://www.w3resource.com/sql-exercises/hospital-database-exercise/sql-exercise-on-hospital-database.php

Sample Database: hospital

With the help of a Hospital Database, this exercises will help you undestand simple  SQL select queries to advanced multi table JOIN queries.

Sample Database description:

Hospitals are the most important part of our lives, trying to provide the best medical facilities to people suffering from various type of illness, which may be due to change in climate conditions, increased work-load, emotional trauma stress etc. It is very much difficult for the hospital to maintain its day-to-day acitivities and records manually. That is why a  database is required to keep records of all type of acitivities of a hospital.

List of tables in the hospital  database:

physician
department
affiliated_with
procedure
trained_in
patient
nurse
appointment
medication
prescribes
block
room
on_call
stay
undergoes


E R Diagram: SQL Hospital Database

physician:

employeeid – this is a unique ID of a physician
name – this is the name of a physician
position – this is the designation of a physician
ssn – this is a security number of a physician

department:

departmentid – this is a unique ID for a department
name – this is the name of a department
head – this is the ID of the physician who is the head of a department, referencing to the column employeeid of the table  physician

affiliated_with:

physician – this is the ID of the  physicians which is referencing to the column employeeid of the  physician table
department – this is the ID the department which is referencing to the column departmentid of the department table
primaryaffiliation – this is a logical column which indicate that whether the  physicians are yet to be affiliated or not
Note: The combination of physician, department will come once in that table.
procedure:

code – this is the unique ID of a medical procedure
name – the name of the medical procedure
cost – the cost for the procedure

trained_in:

 physician – this is ID of the physicians which is referencing to the column employeeid of the physician table
treatment – this is the ID of the medical procedure which is referencing to the column code of the procedure table
certificationdate – this is the starting date of certification
certificationexpires – this is the expiry date of certification
Note: The combination of  physician and treatement will come once in that table.

patient:

ssn – this is a unique ID for each patient
name – this is the name of the patient
address – this is the address of the patient
phone – this is the phone number of the patient
insuranceid – this is the insurance id of the patient
pcp – this is the ID of the  physician who primarily checked up the patient which is referencing to the column employeeid of the physician table

nurse:

employeeid – this is the unique ID for a nurse
name – name of the nurses
position – the designation of the nurses
registered – this is a logical column which indicate that whether the nurses are registered for nursing or not
ssn – this is the security number of a nurse

appointment:

appointmentid – this is the unique ID for an appointment
patient – this is the ID of each patient which is referencing to the ssn column of patient table
prepnurse – the ID of the nurse who may attend the patient with the  physician, which is referencing to the column employeeid of the nurse table
physician – this is the ID the  physicians which is referencing to the employeeid column of the physician table
start_dt_time – this is the schedule date and approximate time to meet the physician
end_dt_time – this is the schedule date and approximate time to end the meeting
examinationroom – this the room where to meet a patient to the physician

medication:

code – this is the unique ID for a medicine
name – this is the name of the medicine
brand – this is the brand of the medicine
description – this is the description of the medicine

prescribes:

 physician – this is the ID of the  physician referencing to the employeeid column of the physician table
patient – this is the ID of the patient which is referencing to the ssn column of the patient table
medication – the ID of the medicine which is referencing to the code of the medication table
date – the date and time of the prescribed medication
appointment – the prescription made by the physician to a patient who may taken an appointment which is referencing to column appointmentid of appointment table
dose – the dose prescribed by the physician
Note: The combination of  physician, patient, medication, date will come once in that table.
block:

blockfloor – ID of the floor
blockcode - ID of the block
Note: The combination of blockfloor, blockcode will come once in that table.

room:

roomnumber – this is the unique ID of a room
roomtype – this is type of room
blockfloor - this is the floor ID where the room in
blockcode – this is the ID of the block where the room in
unavailable – this is the logical column which indicate that whether the room is available or not
Note: The of blockfloor, blockcode columns are refercing to the combination of blockfloor and blockcode columns of the table block.

on_call:

nurse – this is ID of the nurse which is referencing to the employeeid column of the table nurse
blockfloor - this is the ID of the floor
blockcode – this is the ID of block
oncallstart - the starting date and time of on call duration
oncallend – the ending date and time of on call duration
Note: The combination of nurse, blockfloor, blockcode, oncallstart, oncallend will come once in that table and the combination of blockfloor, blockcode columns are refercing to the combination of blockfloor and blockcode columns of the table block .

stay:

stayid - this is unique ID for the admission
patient – this is the ID of the patient which is referencing the ssn column of patient table
room - this is the ID of the room where the patient admitted and which is referencing to the roomnumber column of the room table
start_time – this is the time when a patient admitted
end_time – this is the time how long a patient is staying

undergoes:

patient - this is ID of the patient which is referencing to the ssn column of the patient table
procedure – this is ID of the procedure and referencing to the code column of the procedure table
stay - this is the ID admission of a patient, which is referencing to the stayid column of the stay table
date – this is the date when a patient undergoes for a medical procedure
physician – this is the ID of a  physician which is referencing to the column employeeid of the table physician
assisting nurse – this is the ID of a nurse who will assists the physician, referencing to the column employeeid of the table nurse
Note: The combination of patient, procedure, stay, date will come once in that table.


Challenges:

Challenge 1:

From the following table, write a  SQL query to find out which nurses have not yet been registered. Return all the fields of nurse table.

Solution:

SELECT *
FROM nurse
WHERE registered = "false";

Challenge 2:

From the following table, write a SQL query to identify the nurses in charge of each department. Return nursename as “name”, Position as “Position”.

Solution:

SELECT name AS "Name",
       POSITION AS "Position"
FROM nurse
WHERE POSITION='Head Nurse';

Challenge 3: 

From the following tables, write a SQL query to identify the  physicians who are the department heads. Return Department name as “Department” and  Physician name as “Physician”.

Solution:

SELECT d.name as "Department", p.name as "Physician"
FROM department as d
JOIN physician as p
ON d.head = p.employeeid;

Alternate Solution: 

SELECT d.name AS "Department",
       p.name AS "Physician"
FROM department d,
     physician p
WHERE d.head=p.employeeid;

Challenge 4: 

From the following table, write a SQL query to count the number of patients who scheduled an appointment with at least one physician. Return count as "Number of patients taken at least one appointment".

SOLUTION:

SELECT COUNT(DISTINCT patient) as "Number of patients taken at least one appointment"
FROM appointment;

Challenge 5: 

From the following table, write a SQL query to locate the floor and block where room number 212 is located. Return block floor as "Floor" and block code as "Block".

SOLUTION:

SELECT  blockfloor as "Floor",  blockcode as "Block".
FROM room
WHERE roomnumber = 212;

Challenge 6:

From the following table, write a  SQL query to count the number of available rooms. Return count as "Number of available rooms".

SOLUTION:

SELECT COUNT(unavailable) as  "Number of available rooms"
FROM room
WHERE unavailable = "False";

Challenge 7:

From the following table, write a  SQL query to count the number of unavailable rooms. Return count as "Number of available rooms".

SOLUTION:

SELECT COUNT(unavailable) as  "Number of available rooms"
FROM room
WHERE unavailable = "True";

Challenge 8:

From the following tables, write a  SQL query to identify the  physician and the department with which he or she is affiliated. Return  Physician name as "Physician", and department name as "Department".

SOLUTION:

SELECT p.name as "Physician", d.name as "Department"
FROM physician as p
JOIN affliated_with as af
ON p.employee_id = af.physician
JOIN department as d
ON d.department_id = af.department;

Alternate Solutions:

SELECT p.name AS "Physician",
       d.name AS "Department"
FROM physician p,
     department d,
     affiliated_with a
WHERE p.employeeid=a.physician
  AND a.department=d.departmentid;


SELECT p.name AS "Physician",
       d.name AS "Department"
FROM physician p
INNER JOIN affiliated_with a ON p.employeeid = a.physician
INNER JOIN department d ON a.department = d.departmentid;


Challenge 9:

From the following tables, write a  SQL query to find those  physicians who have received special training. Return  Physician name as “Physician”, treatment procedure name as "Treatment".

SOLUTION:

SELECT p.name as “Physician”, pr.name as "Treatment"
FROM physician as p
JOIN trained_in as t
ON t.physician = p.employee_id
JOIN procedure as pr
ON pr.code = t.treatment;


SELECT p.name AS "Physician",
       c.name AS "Treatement"
FROM physician p,
     PROCEDURE c,
               trained_in t
WHERE t.physician=p.employeeid
  AND t.treatment=c.code;



Challenge 10:


From the following tables, write a  SQL query to find those  physicians who are yet to be affiliated. Return  Physician name as "Physician", Position, and department as "Department".


SOLUTION:

SELECT p.name as "Physician", p.position as "Position", d.name as "Department"
FROM physician as p
JOIN affliated_with as af
ON p.employee_id = af.physician
JOIN department as d
ON d.department_id = af.department
WHERE af.primaryaffiliation = "False";

Challenge 11:

From the following tables, write a  SQL query to identify  physicians who are not specialists. Return  Physician name as "Physician", position as "Designation".

SOLUTION:

SELECT p.name as "Physician", p.position as "Designation"
FROM physician as p
JOIN trained_in as t
ON t.physician = p.employee_id
WHERE t.treatment IS NULL
ORDER BY p.employee_id;


Challenge 12:

From the following tables, write a  SQL query to find the patients with their  physicians by whom they received preliminary treatment. Return Patient name as "Patient", address as "Address" and  Physician name as "Physician".


SOLUTION:

SELECT p.name as "Patient", p.address as "Address", ph.name as physician
FROM physician as ph
JOIN patient as p
ON p.pcp = ph.employee_id;

Challenge 13:

From the following tables, write a  SQL query to identify the patients and the number of  physicians with whom they have scheduled appointments. Return Patient name as "Patient", number of  Physicians as "Appointment for No. of Physicians".

SOLUTION:

SELECT p.name as "Patient", COUNT(t.patient) as "Appointment for No. of Physicians"
FROM appointment t
JOIN patient p ON t.patient=p.ssn
GROUP BY p.name
HAVING count(t.patient)>=1;

Challenge 14:

From the following tables, write a  SQL query to count the number of unique patients who have been scheduled for examination room 'C'. Return unique patients as "No. of patients got appointment for room C".

SOLUTION:

SELECT COUNT(DISTINCT(patient)) as "No. of patients got appointment for room C"
FROM appointment
WHERE examinationroom = "C";

Other Solution:

SELECT (
    SELECT COUNT(DISTINCT patient)
    FROM appointment
    WHERE examinationroom = 'C'
) AS "No. of patients got appointment for room C";

Challenge 15:

From the following tables, write a  SQL query to find the names of the patients and the room number where they need to be treated. Return patient name as "Patient", examination room as "Room No.", and starting date time as Date "Date and Time of appointment".

SOLUTION:

SELECT p.name as "Patient", a.examinationroom as "Room No.", a.start_dt_time as "Date and Time of appointment".
FROM appointment as a
JOIN patient as p
ON p.patient = a.ssn;

Challenge 16:

From the following tables, write a  SQL query to identify the nurses and the room in which they will assist the  physicians. Return Nurse Name as "Name of the Nurse" and examination room as "Room No."

SOLUTION:

SELECT n.name as "Name of the Nurse" and a.examinationroom as "Room No."
FROM appointment as a 
JOIN nurse as n
ON n.employeeid = a.prepnurse;

Challenge 17:

From the following tables, write a  SQL query to locate the patients who attended the appointment on the 25th of April at 10 a.m. Return Name of the patient, Name of the Nurse assisting the  physician, Physician Name as "Name of the physician", examination room as "Room No.", schedule date and approximate time to meet the physician.

SOLUTION:

SELECT p.name as "Patient Name", n.name as "Nurse Name", ph.name as "Physician Name", a.examinationroom as "Examination Room", a.start_dt_time as "Schedule Date and Time"
FROM patient as p 
JOIN nurse as n
ON p.ssn = a.patient
JOIN appointment as a
ON a.prepnurse = n.employee_id
JOIN physician as ph
ON a.physician = ph.employee_id
WHERE a.start_dt_time = "2008-04-25 10:00:00";
